<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
 xmlns:context="http://www.springframework.org/schema/context"  
 xmlns:mvc="http://www.springframework.org/schema/mvc"  
 xsi:schemaLocation="http://www.springframework.org/schema/beans    
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
    http://www.springframework.org/schema/context    
    http://www.springframework.org/schema/context/spring-context-3.1.xsd    
    http://www.springframework.org/schema/mvc    
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">  
    
    
    <!-- 加载属性文件 -->
    <!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:spring.properties</value>
            </list>
        </property>
    </bean> -->
    <!-- <context:property-placeholder location="classpath:spring.properties" ignore-unresolvable="true" />  -->
    
    
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <!-- <context:component-scan base-package="com.lh.blog.controller" /> -->  
    <!-- <context:component-scan base-package="com.lh.blog.system.controller" /> -->
    <context:component-scan base-package="com.lh.blog.*.controller" />
    
    <!-- 视图处理 -->
    <!-- <mvc:view-controller path="/test/selectInfo" view-name="Info"/> -->
    <!-- <mvc:view-controller path="/hh" view-name="hh"/> -->
  
     
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 --> 
    <bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" ></ref>  <!-- JSON转换器 --> 
            </list>  
        </property>  
    </bean>   
    
    <!--当在web.xml 中 DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，加了该句就也能映射静态资源 -->
    <!--jsp页面调用.css和.js等文件，就不会被拦截了-->
    <mvc:default-servlet-handler/>
    
    <!--加了上句导致@RequestMapping不能访问，故增加该句注解映射-->
    <mvc:annotation-driven />
    
    <!-- 定义跳转的文件的前后缀 ，视图模式配置--> 
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="viewResolver">
    
	    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址   -->
        <property name="prefix" value="/views/page/" />  
        <property name="suffix" value=".jsp" />  
    </bean> 
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 --> 
      <!--  <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        默认编码  
        <property name="defaultEncoding" value="utf-8" />    
        文件大小最大值  
        <property name="maxUploadSize" value="10485760000" />    
        内存中的最大值  
        <property name="maxInMemorySize" value="40960" />    
    </bean> --> 
    
    <!-- 文件上传配置 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxInMemorySize" value="10240"/>
        <!-- 最大文件大小，单位字节，-1为不限制大小 默认限制5M-->
        <property name="maxUploadSize" value="524288000"/>
    </bean> 
    
    
    
</beans>  