<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
        http://www.springframework.org/schema/context    
        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
        http://www.springframework.org/schema/mvc    
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">  
    <!-- 自动扫描 -->  
    <!-- <context:component-scan base-package="com.lh.blog.system" > -->
    <context:component-scan base-package="com.lh.blog.*" >
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>  
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <!-- <property name="location" value="classpath:jdbc.properties" /> -->
        <property name="locations">
            <list>
               <value>classpath:jdbc.properties</value>
               <value>classpath:spring.properties</value>
            </list>
        </property>
    </bean>
    <!-- <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true" />  -->
  
    
      <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"  
        destroy-method="close"> 
        <property name="driverClassName" value="${jdbc.driver}" />  
        <property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
        <!-- 初始化连接大小 -->  
      <property name="initialSize" value="${jdbc.initialSize}"></property> 
        <!-- 连接池最大数量 -->  
         <!-- <property name="maxActive" value="${jdbc.maxActive}"></property>   --> 
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${jdbc.maxIdle}"></property>  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${jdbc.minIdle}"></property>  
        <!-- 获取连接最大等待时间 -->  
        <!-- <property name="maxWait" value="${jdbc.maxWait}"></property>   -->
    </bean>  
  
  
<!-- mybatis配置start -->
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <!-- <property name="mapperLocations" value="classpath:com/lh/blog/system/mapper/mapping/*Mapper.xml"></property>   -->
        <property name="mapperLocations" value="classpath:com/lh/blog/*/mapper/mapping/*Mapper.xml"></property>  
    
        <!-- <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="callSettersOnNulls" value="true"/>
            </bean>
        </property>
      -->
        <property name="plugins">
            <array>
                 <!-- MyBatis分页插件 配置-->
                <bean class="com.icinfo.framework.mybatis.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=mysql
                            reasonable=true
                        </value>
                    </property>
                </bean>
                <!-- MyBatis 性能拦截器，用于输出每条 SQL 语句及其执行时间 -->
                <bean class="com.icinfo.framework.mybatis.interceptor.PerformanceInterceptor"/>
            </array>
        </property>  
    
    </bean>  
 <!-- mybatis配置start -->
  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  -->
    <bean class="com.icinfo.framework.mybatis.spring.mapper.MapperScannerConfigurer"> 
        <!-- <property name="basePackage" value="com.lh.blog.system.mapper" /> --> 
        <property name="basePackage" value="com.lh.blog.*.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 
    
    <!-- 定时任务 -->
    <import resource="classpath:spring-quartz.xml"/> 
    
    <!-- shiro安全框架-->
    <import resource="classpath:spring-shiro-single.xml"/> 
    
    <!-- Spring集成Redis-->
    <import resource="classpath:spring-data-redis-single.xml"/> 
  
</beans>  